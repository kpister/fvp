// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fvp.proto

package fvp

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SendMsg struct {
	KnownStates          []*SendMsg_State `protobuf:"bytes,1,rep,name=knownStates,proto3" json:"knownStates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SendMsg) Reset()         { *m = SendMsg{} }
func (m *SendMsg) String() string { return proto.CompactTextString(m) }
func (*SendMsg) ProtoMessage()    {}
func (*SendMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e36e933c92912d0, []int{0}
}

func (m *SendMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMsg.Unmarshal(m, b)
}
func (m *SendMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMsg.Marshal(b, m, deterministic)
}
func (m *SendMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMsg.Merge(m, src)
}
func (m *SendMsg) XXX_Size() int {
	return xxx_messageInfo_SendMsg.Size(m)
}
func (m *SendMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMsg.DiscardUnknown(m)
}

var xxx_messageInfo_SendMsg proto.InternalMessageInfo

func (m *SendMsg) GetKnownStates() []*SendMsg_State {
	if m != nil {
		return m.KnownStates
	}
	return nil
}

type SendMsg_Slice struct {
	Nodes                []string `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMsg_Slice) Reset()         { *m = SendMsg_Slice{} }
func (m *SendMsg_Slice) String() string { return proto.CompactTextString(m) }
func (*SendMsg_Slice) ProtoMessage()    {}
func (*SendMsg_Slice) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e36e933c92912d0, []int{0, 0}
}

func (m *SendMsg_Slice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMsg_Slice.Unmarshal(m, b)
}
func (m *SendMsg_Slice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMsg_Slice.Marshal(b, m, deterministic)
}
func (m *SendMsg_Slice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMsg_Slice.Merge(m, src)
}
func (m *SendMsg_Slice) XXX_Size() int {
	return xxx_messageInfo_SendMsg_Slice.Size(m)
}
func (m *SendMsg_Slice) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMsg_Slice.DiscardUnknown(m)
}

var xxx_messageInfo_SendMsg_Slice proto.InternalMessageInfo

func (m *SendMsg_Slice) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type SendMsg_State struct {
	Id                   string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VotedFor             []string         `protobuf:"bytes,2,rep,name=votedFor,proto3" json:"votedFor,omitempty"`
	Accepted             []string         `protobuf:"bytes,3,rep,name=accepted,proto3" json:"accepted,omitempty"`
	Confirmed            []string         `protobuf:"bytes,4,rep,name=confirmed,proto3" json:"confirmed,omitempty"`
	QuorumSlices         []*SendMsg_Slice `protobuf:"bytes,5,rep,name=quorumSlices,proto3" json:"quorumSlices,omitempty"`
	Counter              int32            `protobuf:"varint,6,opt,name=counter,proto3" json:"counter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SendMsg_State) Reset()         { *m = SendMsg_State{} }
func (m *SendMsg_State) String() string { return proto.CompactTextString(m) }
func (*SendMsg_State) ProtoMessage()    {}
func (*SendMsg_State) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e36e933c92912d0, []int{0, 1}
}

func (m *SendMsg_State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMsg_State.Unmarshal(m, b)
}
func (m *SendMsg_State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMsg_State.Marshal(b, m, deterministic)
}
func (m *SendMsg_State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMsg_State.Merge(m, src)
}
func (m *SendMsg_State) XXX_Size() int {
	return xxx_messageInfo_SendMsg_State.Size(m)
}
func (m *SendMsg_State) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMsg_State.DiscardUnknown(m)
}

var xxx_messageInfo_SendMsg_State proto.InternalMessageInfo

func (m *SendMsg_State) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SendMsg_State) GetVotedFor() []string {
	if m != nil {
		return m.VotedFor
	}
	return nil
}

func (m *SendMsg_State) GetAccepted() []string {
	if m != nil {
		return m.Accepted
	}
	return nil
}

func (m *SendMsg_State) GetConfirmed() []string {
	if m != nil {
		return m.Confirmed
	}
	return nil
}

func (m *SendMsg_State) GetQuorumSlices() []*SendMsg_Slice {
	if m != nil {
		return m.QuorumSlices
	}
	return nil
}

func (m *SendMsg_State) GetCounter() int32 {
	if m != nil {
		return m.Counter
	}
	return 0
}

type EmptyMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyMessage) Reset()         { *m = EmptyMessage{} }
func (m *EmptyMessage) String() string { return proto.CompactTextString(m) }
func (*EmptyMessage) ProtoMessage()    {}
func (*EmptyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e36e933c92912d0, []int{1}
}

func (m *EmptyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyMessage.Unmarshal(m, b)
}
func (m *EmptyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyMessage.Marshal(b, m, deterministic)
}
func (m *EmptyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyMessage.Merge(m, src)
}
func (m *EmptyMessage) XXX_Size() int {
	return xxx_messageInfo_EmptyMessage.Size(m)
}
func (m *EmptyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyMessage proto.InternalMessageInfo

func init() {
	proto.RegisterType((*SendMsg)(nil), "fvp.SendMsg")
	proto.RegisterType((*SendMsg_Slice)(nil), "fvp.SendMsg.Slice")
	proto.RegisterType((*SendMsg_State)(nil), "fvp.SendMsg.State")
	proto.RegisterType((*EmptyMessage)(nil), "fvp.EmptyMessage")
}

func init() { proto.RegisterFile("fvp.proto", fileDescriptor_9e36e933c92912d0) }

var fileDescriptor_9e36e933c92912d0 = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xd1, 0x4e, 0x83, 0x30,
	0x14, 0x86, 0x85, 0x0d, 0x26, 0x67, 0x64, 0x89, 0x27, 0x5e, 0x34, 0x44, 0x13, 0xc2, 0x15, 0xde,
	0x70, 0xb1, 0x19, 0xdf, 0x40, 0xef, 0x76, 0x03, 0x4f, 0x80, 0xf4, 0xb0, 0x10, 0xa5, 0xad, 0x6d,
	0xc1, 0xf8, 0x36, 0xbe, 0x89, 0xaf, 0x66, 0xe8, 0x36, 0xc5, 0xc4, 0xcb, 0xaf, 0xdf, 0xff, 0xff,
	0x69, 0x0b, 0x51, 0x3b, 0xaa, 0x42, 0x69, 0x69, 0x25, 0x2e, 0xda, 0x51, 0x65, 0x9f, 0x3e, 0xac,
	0x2a, 0x12, 0x7c, 0x6f, 0x0e, 0x78, 0x0f, 0xeb, 0x17, 0x21, 0xdf, 0x45, 0x65, 0x6b, 0x4b, 0x86,
	0x79, 0xe9, 0x22, 0x5f, 0x6f, 0xb1, 0x98, 0x1a, 0xa7, 0x48, 0xe1, 0x54, 0x39, 0x8f, 0x25, 0xb7,
	0x10, 0x54, 0xaf, 0x5d, 0x43, 0x78, 0x0d, 0x81, 0x90, 0xfc, 0x54, 0x8c, 0xca, 0x23, 0x24, 0x5f,
	0x1e, 0x04, 0x2e, 0x89, 0x1b, 0xf0, 0x3b, 0xce, 0xbc, 0xd4, 0xcb, 0xa3, 0xd2, 0xef, 0x38, 0x26,
	0x70, 0x39, 0x4a, 0x4b, 0xfc, 0x49, 0x6a, 0xe6, 0xbb, 0xca, 0x0f, 0x4f, 0xae, 0x6e, 0x1a, 0x52,
	0x96, 0x38, 0x5b, 0x1c, 0xdd, 0x99, 0xf1, 0x06, 0xa2, 0x46, 0x8a, 0xb6, 0xd3, 0x3d, 0x71, 0xb6,
	0x74, 0xf2, 0xf7, 0x00, 0x1f, 0x20, 0x7e, 0x1b, 0xa4, 0x1e, 0x7a, 0x77, 0x29, 0xc3, 0x82, 0xff,
	0x5e, 0x31, 0xa9, 0xf2, 0x4f, 0x0e, 0x19, 0xac, 0x1a, 0x39, 0x08, 0x4b, 0x9a, 0x85, 0xa9, 0x97,
	0x07, 0xe5, 0x19, 0xb3, 0x0d, 0xc4, 0x8f, 0xbd, 0xb2, 0x1f, 0x7b, 0x32, 0xa6, 0x3e, 0xd0, 0x76,
	0x07, 0x61, 0x45, 0x7a, 0x24, 0x8d, 0x77, 0xb0, 0x9c, 0x26, 0x31, 0x9e, 0xaf, 0x27, 0x57, 0x8e,
	0xe6, 0x95, 0xec, 0xe2, 0x39, 0x74, 0x7f, 0xbe, 0xfb, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x34, 0x97,
	0x2c, 0x1d, 0x80, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServerClient is the client API for Server service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServerClient interface {
	Send(ctx context.Context, in *SendMsg, opts ...grpc.CallOption) (*EmptyMessage, error)
}

type serverClient struct {
	cc *grpc.ClientConn
}

func NewServerClient(cc *grpc.ClientConn) ServerClient {
	return &serverClient{cc}
}

func (c *serverClient) Send(ctx context.Context, in *SendMsg, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/fvp.Server/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServerServer is the server API for Server service.
type ServerServer interface {
	Send(context.Context, *SendMsg) (*EmptyMessage, error)
}

// UnimplementedServerServer can be embedded to have forward compatible implementations.
type UnimplementedServerServer struct {
}

func (*UnimplementedServerServer) Send(ctx context.Context, req *SendMsg) (*EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}

func RegisterServerServer(s *grpc.Server, srv ServerServer) {
	s.RegisterService(&_Server_serviceDesc, srv)
}

func _Server_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fvp.Server/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerServer).Send(ctx, req.(*SendMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _Server_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fvp.Server",
	HandlerType: (*ServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _Server_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fvp.proto",
}
